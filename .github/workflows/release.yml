name: release

on:
    push:
        tags:
            - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
    build:
        name: Upload Release Asset
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
        steps:
            - name: Cache cargo registry
              uses: actions/cache@v1
              with:
                  path: ~/.cargo/registry
                  key: ${{ runner.os }}-cargo-registry
            - name: Cache cargo index
              uses: actions/cache@v1
              with:
                  path: ~/.cargo/git
                  key: ${{ runner.os }}-cargo-index
            - name: Cache cargo build
              uses: actions/cache@v1
              with:
                  path: target
                  key: ${{ runner.os }}-cargo-build-target
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  submodules: recursive
            - name: Build project
              run: |
                  cargo build --release
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false
            - name: Upload asset
              id: upload-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./target/release/cbsignal_rs
                  asset_name: cbsignal_rs
                  asset_content_type: application/octet-stream
            - name: Set env
              run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV